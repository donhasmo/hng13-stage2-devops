services:
  app_blue:
    image: "${BLUE_IMAGE}"
    container_name: app_blue
    restart: always
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
    ports:
      - "8081:${PORT}"   # grader can call this directly to trigger chaos
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${PORT}/healthz || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 2

  app_green:
    image: "${GREEN_IMAGE}"
    container_name: app_green
    restart: always
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
    ports:
      - "8082:${PORT}"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${PORT}/healthz || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 2

  nginx:
    image: "nginx:stable-alpine"
    container_name: nginx_bluegreen
    depends_on:
      - app_blue
      - app_green
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint.sh:ro
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
      - PRIMARY_NAME=
      - BACKUP_NAME=
    entrypoint: ["/bin/sh","/docker-entrypoint.sh"]
    restart: always
